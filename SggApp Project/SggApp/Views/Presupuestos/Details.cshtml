@model SggApp.Models.PresupuestoViewModel
@{
    ViewData["Title"] = "Detalles del Presupuesto";
}

<div class="container mt-4">
    <div class="card shadow">
        <div class="card-header bg-info text-white">
            <h2 class="card-title"><i class="bi bi-eye-fill"></i> @ViewData["Title"]</h2>
        </div>
        <div class="card-body">
            <div class="row">
                <!-- Columna Izquierda -->
                <div class="col-md-6">
                    <dl class="row">
                        <dt class="col-sm-4">Categoría:</dt>
                        <dd class="col-sm-8">@(Model.CategoriaNombre ?? "General")</dd>

                        <dt class="col-sm-4">Moneda:</dt>
                        <dd class="col-sm-8">@Model.MonedaCodigo</dd>

                        <dt class="col-sm-4">Período:</dt>
                        <dd class="col-sm-8">@Model.FechaInicio.ToString("d") al @Model.FechaFin.ToString("d")</dd>
                    </dl>
                </div>

                <!-- Columna Derecha -->
                <div class="col-md-6">
                    <dl class="row">
                        <dt class="col-sm-4">Límite:</dt>
                        <dd class="col-sm-8">@Model.Limite.ToString("C2")</dd>

                        <dt class="col-sm-4">Gastado:</dt>
                        <dd class="col-sm-8 @(Model.MontoGastado > Model.Limite ? "text-danger" : "")">
                            @Model.MontoGastado.ToString("C2")
                            (@Math.Round(Model.PorcentajeUtilizado, 1)%)
                        </dd>

                        <dt class="col-sm-4">Disponible:</dt>
                        <dd class="col-sm-8 @((Model.Limite - Model.MontoGastado) < 0 ? "text-danger" : "text-success")">
                            @((Model.Limite - Model.MontoGastado).ToString("C2"))
                        </dd>
                    </dl>
                </div>
            </div>

            <!-- Gráfico de Progreso -->
            <div class="mt-4">
                <h5 class="mb-3">Progreso del Presupuesto</h5>
                <div class="progress" style="height: 30px;">
                    <div class="progress-bar @(Model.PorcentajeUtilizado >= (Model.NotificarAl ?? 100) ? "bg-warning" : "bg-success")"
                         role="progressbar"
                         style="width: @(Math.Min(Model.PorcentajeUtilizado, 100))%"
                         aria-valuenow="@Model.PorcentajeUtilizado"
                         aria-valuemin="0"
                         aria-valuemax="100">
                        @Math.Round(Model.PorcentajeUtilizado, 1)%
                    </div>
                </div>
                @if (Model.NotificarAl.HasValue)
                {
                    <small class="text-muted">Alerta configurada al @Model.NotificarAl%</small>
                }
            </div>
        </div>
        <div class="card-footer">
            <div class="d-flex justify-content-between">
                <a asp-action="Index" class="btn btn-outline-secondary">
                    <i class="bi bi-arrow-left"></i> Volver
                </a>
                <div>
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-warning">
                        <i class="bi bi-pencil"></i> Editar
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Opcional: Añadir gráfico con Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const ctx = document.createElement('canvas');
            document.querySelector('.card-body').appendChild(ctx);

            new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: ['Utilizado', 'Disponible'],
                    datasets: [{
                        data: [@Model.MontoGastado, @(Model.Limite - Model.MontoGastado)],
                        backgroundColor: [
                            '@(Model.PorcentajeUtilizado >= (Model.NotificarAl ?? 100) ? "#ffc107" : "#28a745")',
                            '#e9ecef'
                        ]
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: { position: 'bottom' },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return context.label + ': ' + context.raw.toLocaleString('es-AR', {
                                        style: 'currency',
                                        currency: '@Model.MonedaCodigo'
                                    });
                                }
                            }
                        }
                    }
                }
            });
        });
    </script>
}
